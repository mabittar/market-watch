# By default, enable all the lint rules.
# Add to the ignore list below if you don't want some rules.
# If you need some ignores for certain modules, see tool.ruff.lint.per-file-ignores below.
# For individual ignore cases, prefer inline `# noqa`s within the code.
   
target-version = "py310"

[lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.extend-select = [
  "UP",  # pyupgrade
  "D",   # pydocstyle
]

include = ["pyproject.toml", "src/**/*.py", "scripts/**/*.py", "tests/**/*.py"]

select = [
    "F",  # Pyflakes
    "E",  # Pycodestyle
    "W",  # Pycodestyle
    "UP",  # pyupgrade
    "I",  # isort
    "PL", # Pylint
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "*.pyi",
    "*.html",
    "*.css",
    "*.js",
    "**/__init__.py",
]

ignore = [
    "ANN",      # Type hints related, let mypy handle these.
    "COM812",   # "Trailing comma missing". If black is happy, I'm happy.
    "D",        # Docstrings related
    "E501",     # "Line too long". If black is happy, I'm happy.
    "EM101",    # "Exception must not use a string literal, assign to variable first"
    "EM102",    # "Exception must not use an f-string literal, assign to variable first"
    "PTH",      # User Pathlib stuff over os.*. Should migrate to Pathlib at some point.
    "RET504",   # "Unnecessary variable assignment before `return` statement"
    "S101",     # "Use of `assert` detected"
    "SIM108",   # "Use ternary operator ...". Ternary is harmful for readability in some cases.
    "TRY003",   # "Avoid specifying long messages outside the exception class"
    "FA100", 	# "Missing `from __future__ import annotations` ..." pytest-split supports a range of Python versions
    ]
    
max-args = 4

[lint.pydocstyle]
convention = "google"

# Same as Black.
line-length = 90
indent-width = 4

[format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Ignore `E402` (import violations) in all `__init__.py` files, and in select subdirectories.
[lint.per-file-ignores]
"__init__.py" = ["E402"]
"**/{tests,docs,tools}/*" = ["E402"]

[tool.ruff.lint.mccabe]
max-complexity = 8

[tool.ruff.lint.pep8-naming]
classmethod-decorators = [
    "classmethod",
    "pydantic.validator",
    "pydantic.root_validator",
]
